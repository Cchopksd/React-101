"use client";
import React, { useEffect, useRef } from "react";
import { RenderTracker } from "./RenderTracker";

// üë∂ Child Component ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£ re-render
export const ChildComponent = React.memo(
  ({
    onClick,
    label,
    trackingId,
  }: {
    onClick: () => void;
    label: string;
    trackingId: string;
  }) => {
    const renderCount = useRef(0);
    renderCount.current += 1;

    // üêõ Log ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π re-render ‡πÉ‡∏ô console
    useEffect(() => {
      console.log(`${trackingId} Child rendered: ${renderCount.current} times`);
    });

    return (
      <div className="border-2 border-dashed border-gray-300 p-3 rounded">
        <div className="flex justify-between items-center mb-2">
          <span className="font-medium">{label}</span>
          <RenderTracker
            name="Child"
            color="bg-blue-100 text-blue-400"
          />
        </div>
        <button
          onClick={onClick}
          className="w-full px-3 py-1 bg-blue-500 hover:bg-blue-600 text-black rounded text-sm">
          Click Me ({renderCount.current} renders)
        </button>
      </div>
    );
  }
);
ChildComponent.displayName = "ChildComponent";
// ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ React.memo ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
// ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠ displayName ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö component ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ React.memo
// ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ React DevTools ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
// ‡πÅ‡∏•‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏µ‡∏ö‡∏±‡∏Å
// ‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£ re-render ‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢‡∏Ç‡∏∂‡πâ‡∏ô

