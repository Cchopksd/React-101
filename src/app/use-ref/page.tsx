"use client";

import { useRef, useState, useEffect } from "react";

export default function UseRefExamplePage() {
  // ‡πÉ‡∏ä‡πâ useState ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏ö‡∏ô UI (trigger render)
  const [inputValue, setInputValue] = useState("");

  // useRef ‡πÉ‡∏ä‡πâ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á render ‡πÉ‡∏´‡∏°‡πà ‡πÄ‡∏ä‡πà‡∏ô counter
  const renderCountRef = useRef(0);

  // ‡πÄ‡∏Å‡πá‡∏ö DOM element (input) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏°‡∏±‡∏ô ‡πÄ‡∏ä‡πà‡∏ô focus()
  const inputRef = useRef<HTMLInputElement>(null);

  // ‡πÄ‡∏û‡∏¥‡πà‡∏° render count ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà component render ‡πÉ‡∏´‡∏°‡πà
  useEffect(() => {
    renderCountRef.current += 1;
  });

  // ‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ input ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö focus ‡∏ï‡∏≠‡∏ô mount (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô auto-focus)
  useEffect(() => {
    inputRef.current?.focus();
  }, []);

  return (
    <main className="min-h-screen flex items-center justify-center bg-gray-100 p-6">
      <div className="bg-white rounded-xl shadow-lg p-8 w-full max-w-md">
        <h1 className="text-2xl font-bold text-gray-700 mb-6">
          üîç useRef Example
        </h1>

        {/* input ‡∏ô‡∏µ‡πâ‡∏à‡∏∞ auto-focus ‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏ú‡πà‡∏≤‡∏ô state */}
        <input
          ref={inputRef} // ‡∏ú‡∏π‡∏Å‡∏Å‡∏±‡∏ö useRef ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á DOM node
          type="text"
          value={inputValue}
          onChange={(e) => setInputValue(e.target.value)}
          className="w-full border border-gray-300 rounded px-4 py-2 text-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
          placeholder="Start typing..."
        />

        <div className="mt-6 space-y-2 text-gray-600">
          {/* ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå */}
          <p>
            üìù <strong>Current Input:</strong> {inputValue || <em>(empty)</em>}
          </p>

          {/* ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà component render ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ useState */}
          <p>
            üîÅ <strong>Render Count:</strong> {renderCountRef.current}
          </p>
        </div>
      </div>
    </main>
  );
}

